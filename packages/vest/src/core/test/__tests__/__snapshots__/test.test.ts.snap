// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Vest's \`test\` function test params creates a test without a key 1`] = `
{
  "$type": "Test",
  "children": null,
  "fieldName": "field_name",
  "key": null,
  "keys": null,
  "message": "failure message",
  "output": undefined,
  "parent": {
    "$type": "Suite",
    "children": [
      [Circular],
    ],
    "key": null,
    "keys": null,
    "optional": {},
    "output": {
      "done": [Function],
      "errorCount": 0,
      "errors": [],
      "getError": [Function],
      "getErrors": [Function],
      "getErrorsByGroup": [Function],
      "getWarning": [Function],
      "getWarnings": [Function],
      "getWarningsByGroup": [Function],
      "groups": {},
      "hasErrors": [Function],
      "hasErrorsByGroup": [Function],
      "hasWarnings": [Function],
      "hasWarningsByGroup": [Function],
      "isValid": [Function],
      "isValidByGroup": [Function],
      "suiteName": undefined,
      "testCount": 1,
      "tests": {
        "field_name": SummaryBase {
          "errorCount": 0,
          "errors": [],
          "testCount": 1,
          "valid": true,
          "warnCount": 0,
          "warnings": [],
        },
      },
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
    "parent": null,
  },
  "severity": "error",
  "status": "PASSING",
  "testFn": [Function],
}
`;

exports[`Test Vest's \`test\` function test params creates a test without a message and with a key 1`] = `
{
  "$type": "Test",
  "children": null,
  "fieldName": "field_name",
  "key": "keyboardcat",
  "keys": null,
  "output": undefined,
  "parent": {
    "$type": "Suite",
    "children": [
      [Circular],
    ],
    "key": null,
    "keys": {
      "keyboardcat": [Circular],
    },
    "optional": {},
    "output": {
      "done": [Function],
      "errorCount": 0,
      "errors": [],
      "getError": [Function],
      "getErrors": [Function],
      "getErrorsByGroup": [Function],
      "getWarning": [Function],
      "getWarnings": [Function],
      "getWarningsByGroup": [Function],
      "groups": {},
      "hasErrors": [Function],
      "hasErrorsByGroup": [Function],
      "hasWarnings": [Function],
      "hasWarningsByGroup": [Function],
      "isValid": [Function],
      "isValidByGroup": [Function],
      "suiteName": undefined,
      "testCount": 1,
      "tests": {
        "field_name": SummaryBase {
          "errorCount": 0,
          "errors": [],
          "testCount": 1,
          "valid": true,
          "warnCount": 0,
          "warnings": [],
        },
      },
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
    "parent": null,
  },
  "severity": "error",
  "status": "PASSING",
  "testFn": [Function],
}
`;

exports[`Test Vest's \`test\` function test params creates a test without a message and without a key 1`] = `
{
  "$type": "Test",
  "children": null,
  "fieldName": "field_name",
  "key": null,
  "keys": null,
  "output": undefined,
  "parent": {
    "$type": "Suite",
    "children": [
      [Circular],
    ],
    "key": null,
    "keys": null,
    "optional": {},
    "output": {
      "done": [Function],
      "errorCount": 0,
      "errors": [],
      "getError": [Function],
      "getErrors": [Function],
      "getErrorsByGroup": [Function],
      "getWarning": [Function],
      "getWarnings": [Function],
      "getWarningsByGroup": [Function],
      "groups": {},
      "hasErrors": [Function],
      "hasErrorsByGroup": [Function],
      "hasWarnings": [Function],
      "hasWarningsByGroup": [Function],
      "isValid": [Function],
      "isValidByGroup": [Function],
      "suiteName": undefined,
      "testCount": 1,
      "tests": {
        "field_name": SummaryBase {
          "errorCount": 0,
          "errors": [],
          "testCount": 1,
          "valid": true,
          "warnCount": 0,
          "warnings": [],
        },
      },
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
    "parent": null,
  },
  "severity": "error",
  "status": "PASSING",
  "testFn": [Function],
}
`;
